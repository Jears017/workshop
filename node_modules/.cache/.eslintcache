[{"/home/jears0177/2021/deploy-workshop/client/src/index.js":"1","/home/jears0177/2021/deploy-workshop/client/src/reportWebVitals.js":"2","/home/jears0177/2021/deploy-workshop/client/src/App.js":"3","/home/jears0177/2021/deploy-workshop/client/src/store/store.js":"4","/home/jears0177/2021/deploy-workshop/client/src/components/Products/Products.js":"5","/home/jears0177/2021/deploy-workshop/client/src/components/Header/Header.js":"6","/home/jears0177/2021/deploy-workshop/client/src/components/Orders/Orders.js":"7","/home/jears0177/2021/deploy-workshop/client/src/components/Create-Product/Create-Product.js":"8","/home/jears0177/2021/deploy-workshop/client/src/components/Create-Order/Create-Order.js":"9","/home/jears0177/2021/deploy-workshop/client/src/components/Edit-Product/Edit-Product.js":"10","/home/jears0177/2021/deploy-workshop/client/src/components/ReceiptComponent/ReceiptComponent.js":"11","/home/jears0177/2021/deploy-workshop/client/src/components/Login/Login.js":"12","/home/jears0177/2021/deploy-workshop/client/src/components/Edit-Order/Edit-Order.js":"13","/home/jears0177/2021/deploy-workshop/client/src/store/reducers/index.js":"14","/home/jears0177/2021/deploy-workshop/client/src/store/reducers/login.js":"15","/home/jears0177/2021/deploy-workshop/client/src/store/reducers/order.js":"16","/home/jears0177/2021/deploy-workshop/client/src/components/Receipt/Receipt.js":"17","/home/jears0177/2021/deploy-workshop/client/src/components/Print/Print.js":"18","/home/jears0177/2021/deploy-workshop/client/src/utils/Checked.js":"19","/home/jears0177/2021/deploy-workshop/client/src/components/Chek/Chek.js":"20","/home/jears0177/2021/deploy-workshop/client/src/components/Order-Table/Order-Table.js":"21"},{"size":683,"mtime":1634827033690,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1634825697424,"results":"24","hashOfConfig":"23"},{"size":1514,"mtime":1635342568672,"results":"25","hashOfConfig":"23"},{"size":121,"mtime":1634826830524,"results":"26","hashOfConfig":"23"},{"size":2775,"mtime":1634827661127,"results":"27","hashOfConfig":"23"},{"size":1579,"mtime":1634826823420,"results":"28","hashOfConfig":"23"},{"size":2105,"mtime":1634909323354,"results":"29","hashOfConfig":"23"},{"size":2640,"mtime":1634827567346,"results":"30","hashOfConfig":"23"},{"size":9033,"mtime":1635341930476,"results":"31","hashOfConfig":"23"},{"size":3081,"mtime":1634827618085,"results":"32","hashOfConfig":"23"},{"size":445,"mtime":1634827677384,"results":"33","hashOfConfig":"23"},{"size":2223,"mtime":1634826823420,"results":"34","hashOfConfig":"23"},{"size":9519,"mtime":1635342404034,"results":"35","hashOfConfig":"23"},{"size":212,"mtime":1634826830516,"results":"36","hashOfConfig":"23"},{"size":1209,"mtime":1634826830516,"results":"37","hashOfConfig":"23"},{"size":1217,"mtime":1634826830520,"results":"38","hashOfConfig":"23"},{"size":3394,"mtime":1635421606138,"results":"39","hashOfConfig":"23"},{"size":868,"mtime":1634826823424,"results":"40","hashOfConfig":"23"},{"size":153,"mtime":1634826838832,"results":"41","hashOfConfig":"23"},{"size":313,"mtime":1635421211401,"results":"42","hashOfConfig":"23"},{"size":3031,"mtime":1635342091950,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gyq1iv",{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"/home/jears0177/2021/deploy-workshop/client/src/index.js",[],"/home/jears0177/2021/deploy-workshop/client/src/reportWebVitals.js",[],"/home/jears0177/2021/deploy-workshop/client/src/App.js",["95"],"import React from 'react'\nimport './App.css';\nimport {Orders} from \"./components/Orders/Orders\";\nimport {Header} from \"./components/Header/Header\";\nimport {Route} from \"react-router-dom\";\nimport {CreateOrder} from \"./components/Create-Order/Create-Order\";\nimport {Products} from \"./components/Products/Products\";\nimport {CreateProduct} from \"./components/Create-Product/Create-Product\";\nimport {EditProduct} from \"./components/Edit-Product/Edit-Product\";\nimport {EditOrder} from \"./components/Edit-Order/Edit-Order\";\nimport {Example, ReceiptComponent} from \"./components/ReceiptComponent/ReceiptComponent\";\nimport {Login} from \"./components/Login/Login\";\nimport {useSelector} from \"react-redux\";\n\nfunction App() {\n    const {isAuthenticated} = useSelector(state => state.login)\n    return (\n        <div className=\"main\">\n            <Header/>\n            {!isAuthenticated && <Login/>}\n            {isAuthenticated && <>\n                <Route exact path='/' component={Orders}/>\n                <Route exact path='/add-order' component={CreateOrder}/>\n                <Route exact path='/products' component={Products}/>\n                <Route exact path='/create-product' component={CreateProduct}/>\n                <Route exact path='/edit-product/:id' component={EditProduct}/>\n                <Route exact path='/edit-order/:id' component={EditOrder}/>\n                <Route exact path='/receipt/:id' component={ReceiptComponent}/>\n            </>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","/home/jears0177/2021/deploy-workshop/client/src/store/store.js",[],"/home/jears0177/2021/deploy-workshop/client/src/components/Products/Products.js",[],"/home/jears0177/2021/deploy-workshop/client/src/components/Header/Header.js",[],"/home/jears0177/2021/deploy-workshop/client/src/components/Orders/Orders.js",["96"],"import React, {useEffect, useState} from 'react'\nimport axios from \"axios\";\nimport c from './Orders.module.css'\nimport {Link} from \"react-router-dom\";\nimport {OrderTable} from \"../Order-Table/Order-Table\";\n\nexport const Orders = () => {\n    const [order, setOrder] = useState([])\n    const [date, setDate] = useState('')\n    const [query, setQuery] = useState('')\n    useEffect(() => {\n        axios.get('https://workshop-application77.herokuapp.com/api/receipt/').then(res => setOrder(res.data))\n\n    })\n\n    const dateHandler = (e) => {\n        setDate(e.target.value)\n    }\n\n    const queryHandler = (e) => {\n        setQuery(e.target.value)\n    }\n\n\n    const deleteHandler = async (id) => {\n        await axios.delete(`https://workshop-application77.herokuapp.com/api/receipt/${id}`)\n        const newOrder = order.filter(order => order._id === id)\n        setOrder(newOrder)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        const newOrder = order.filter(order => order.client.includes(query))\n        setOrder(newOrder)\n    }\n\n    /*if(date){\n       const newOrder = order.filter(order => order.dateEnd === date)\n        setOrder(newOrder)\n    }*/\n\n\n    return (\n        <div>\n            <div className={c.addButtonContainer}>\n                <h2>Заказы:</h2>\n                <div className={c.search}>\n                    <input className=\"form-control\" onChange={queryHandler} value={query} placeholder='Начать поиск...'\n                           type=\"text\"/>\n                </div>\n                <div>\n                    <input className=\"form-control\" onChange={dateHandler} value={date} type=\"date\"/>\n                </div>\n                <div>\n                    <Link to={'/add-order'}>\n                        <div className={c.addButton}>+</div>\n                    </Link>\n                </div>\n            </div>\n            <OrderTable\n                order={date ? order.filter(order => order.dateEnd === date) : order}\n                deleteHandler={deleteHandler}\n                query={query}\n            />\n        </div>\n    )\n}","/home/jears0177/2021/deploy-workshop/client/src/components/Create-Product/Create-Product.js",[],"/home/jears0177/2021/deploy-workshop/client/src/components/Create-Order/Create-Order.js",["97","98","99","100","101"],"import React, {useEffect, useState} from 'react'\nimport axios from \"axios\";\nimport {setContainerIsEmpty, setProductContainer, setProductValue} from \"../../store/reducers/order\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport c from './Create-Order.module.css'\nimport {Redirect} from \"react-router-dom\";\n\nconst initialState = {\n    client: '',\n    number: '',\n    dateEnd: '',\n    productName: '',\n    action: '',\n    price: '',\n    currentSum: '',\n    products: []\n}\n\nexport const CreateOrder = () => {\n    const [product, setProduct] = useState([])\n    const [productFilter, setProductFilter] = useState([])\n    const [receipt, setReceipt] = useState(initialState)\n    const [sum, setSum] = useState(0)\n    const [fetching, setFetching] = useState(false)\n\n    const dispatch = useDispatch()\n    const state = useSelector(state => state.order)\n\n\n    useEffect(() => {\n        axios.get('https://workshop-application77.herokuapp.com/api/products/').then(res => setProduct(res.data))\n    }, [])\n\n    useEffect(() => {\n        setProductFilter(product.map(el => el.name))\n    }, [product])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const obj = {\n            client: receipt.client,\n            number: receipt.number,\n            dateEnd: receipt.dateEnd,\n            productName: receipt.productName,\n            action: receipt.action,\n            products: [...state.container],\n            sum: sum,\n            currentSum: receipt.currentSum\n        }\n        axios.post('https://workshop-application77.herokuapp.com/api/receipt/', {...obj})\n        setReceipt(prevState => {\n            return {...prevState, client: '', number: '', dateEnd: '', productName: '', action: '', price: '', currentSum: ''}\n        })\n        dispatch(setContainerIsEmpty())\n        setSum(0)\n        if (receipt.client && receipt.number && receipt.dateEnd && receipt.products) {\n            setFetching(true)\n        }\n    }\n\n    if (receipt.action) {\n        axios.get(`https://workshop-application77.herokuapp.com/api/products/${receipt.productName}/${receipt.action}`).then(res => setReceipt(prevState => {\n            return {...prevState, price: res.data[0].price}\n        }))\n    }\n\n    const formOnChange = (e) => {\n        setReceipt(prevState => {\n            return {...prevState, [e.target.name]: e.target.value}\n        })\n    }\n\n    const addSomeProduct = (e) => {\n        e.preventDefault()\n        dispatch(setProductContainer({\n            productName: receipt.productName,\n            action: receipt.action,\n            price: receipt.price,\n        }))\n        setSum(sum + receipt.price)\n        setReceipt(prevState => {\n            return {...prevState, productName: '', action: '', price: ''}\n        })\n    }\n\n    const clearCard = () => {\n        dispatch(setContainerIsEmpty())\n        setSum(0)\n    }\n\n    if (fetching) {\n        return <Redirect to={'/'}/>\n    }\n\n    console.log(new Date().toJSON().slice(0, 10))\n\n\n    return (\n        <div>\n            <h2 className={c.title}>Оформление заказа:</h2>\n            <form onSubmit={onSubmit}>\n                <div>\n                    <label>\n                        ФИО:\n                        <input\n                            className=\"form-control\"\n                            value={receipt.client}\n                            name={'client'}\n                            onChange={formOnChange}\n                            placeholder={'Введите ФИО'}\n                            type=\"text\"\n                        />\n                    </label>\n                </div>\n                <div>\n                    <label>\n                        Номер:\n                        <input\n                            className=\"form-control\"\n                            value={receipt.number}\n                            name={'number'}\n                            onChange={formOnChange}\n                            placeholder={'Введите номер'}\n                            type=\"number\"\n                        />\n                    </label>\n                </div>\n                <div>\n                    <label>\n                        Дата готового изделия:\n                        <input\n                            className=\"form-control\"\n                            value={receipt.dateEnd}\n                            min={new Date().toJSON().slice(0, 10)}\n                            name={'dateEnd'}\n                            onChange={formOnChange}\n                            type=\"date\"\n                        />\n                    </label>\n                </div>\n                <div className={c.productSelectContainer}>\n                    <div>\n                        <label>\n                            Изделие:\n                            <div className={c.selectSettings}>\n                                <select className=\"form-select\" value={receipt.productName} name='productName'\n                                        onChange={formOnChange}>\n                                    <option>Выберите одежду</option>\n                                    {productFilter.filter((el, idx) => productFilter.indexOf(el) === idx).map(prod => {\n                                        return (\n                                            <option value={prod} key={prod}>{prod}</option>\n                                        )\n                                    })}\n                                </select>\n                            </div>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Действие:\n                            <div className={c.selectSettings}>\n                                <select className=\"form-select\" value={receipt.action} name='action'\n                                        onChange={formOnChange}>\n                                    <option>Выберите действие</option>\n                                    {product.filter(prod => prod.name === receipt.productName).map(prod => {\n                                        return (\n                                            <option value={prod.action} key={prod._id}>{prod.action}</option>\n                                        )\n                                    })}\n                                </select>\n                            </div>\n                        </label>\n                    </div>\n                    <div className={c.productButton}>\n                        <input onClick={addSomeProduct} className=\"btn btn-primary\" value={'add'} type=\"button\"/>\n                    </div>\n                    {state.container.length != 0 && <div className={c.productButton}>\n                        <input onClick={clearCard} className=\"btn btn-primary\" value={'clear'} type=\"button\"/>\n                    </div>\n                    }\n                </div>\n                {state.container.length != 0 && <div className={c.table}>\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Изделие</th>\n                            <th scope=\"col\">Перечень работ</th>\n                            <th scope=\"col\">Стоимость</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {state.container.map((el, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{index + 1}</th>\n                                    <td>{el.productName}</td>\n                                    <td>{el.action}</td>\n                                    <td>{el.price} руб.</td>\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </table>\n                </div>}\n                {state.container.length != 0 && <div>Итого: {sum} руб.</div>}\n                {state.container.length != 0 &&\n                <div className={c.currentSum}>\n                    <label>\n                        Внесенная сумма:\n                        <input\n                            className=\"form-control\"\n                            value={receipt.currentSum}\n                            name={'currentSum'}\n                            onChange={formOnChange}\n                            placeholder={'Введите внесенную сумму'}\n                            type=\"number\"\n                        />\n                    </label>\n                </div>}\n                <div className={c.submitBtn}>\n                    <input className=\"btn btn-primary\" type=\"submit\" value={'Добавить заказ'}/>\n                </div>\n            </form>\n        </div>\n    )\n}","/home/jears0177/2021/deploy-workshop/client/src/components/Edit-Product/Edit-Product.js",["102","103","104"],"import React, {useEffect, useState} from 'react'\nimport c from \"../Create-Order/Create-Order.module.css\";\nimport axios from \"axios\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const EditProduct = (props) => {\n\n\n    const initialState = {\n        name: '',\n        action: '',\n        price: ''\n    }\n    const [data, setData] = useState(initialState)\n    const [product, setProduct] = useState({})\n    const [fetching, setFetching] = useState(false)\n\n    useEffect(() => {\n        axios.get(`https://workshop-application77.herokuapp.com/api/products/${props.match.params.id}`).then(res => setData(prevState => {\n            return {...prevState, name: res.data.name, action: res.data.action, price: res.data.price}\n        }))\n    }, [])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        axios.put(`https://workshop-application77.herokuapp.com/api/products/${props.match.params.id}`, {...data})\n        if (data.name && data.action && data.price) {\n            setFetching(true)\n        }\n\n    }\n\n    const onChangeHandler = (e) => {\n        setData(prevState => {\n            return {...prevState, [e.target.name]: e.target.value}\n        })\n    }\n\n    if (fetching) {\n        return <Redirect to={'/products'}/>\n    }\n    return (\n        <div>\n            <form onSubmit={submitHandler}>\n                <div>\n                    <label>\n                        Изделие:\n                        <input\n                            className=\"form-control\"\n                            name={'name'}\n                            placeholder={'Введите изделие'}\n                            type=\"text\"\n                            onChange={onChangeHandler}\n                            value={data.name}\n                        />\n                    </label>\n                </div>\n                <div>\n                    <label>\n                        Действие:\n                        <input\n                            className=\"form-control\"\n                            name={'action'}\n                            placeholder={'Введите действие'}\n                            type=\"text\"\n                            onChange={onChangeHandler}\n                            value={data.action}\n                        />\n                    </label>\n                </div>\n                <div>\n                    <label>\n                        Стоимость:\n                        <input\n                            className=\"form-control\"\n                            name={'price'}\n                            type=\"number\"\n                            placeholder={'Введите стоимость'}\n                            onChange={onChangeHandler}\n                            value={data.price}\n                        />\n                    </label>\n                </div>\n                <div className={c.submitBtn}>\n                    <input type=\"submit\" value={'Добавить'} className={'btn btn-primary'}/>\n                </div>\n            </form>\n        </div>\n    )\n}","/home/jears0177/2021/deploy-workshop/client/src/components/ReceiptComponent/ReceiptComponent.js",["105","106","107","108","109","110"],"import React, {useEffect, useRef, useState} from 'react'\nimport c from './ReceiptComponent.module.css'\nimport axios from \"axios\";\n\nimport {Receipt} from \"../Receipt/Receipt\";\nimport {Example} from \"../Print/Print\";\nimport ReactToPrint from \"react-to-print\";\n\n\n\n\nexport const ReceiptComponent = (props) => {\n    return (\n        <div className={c.receiptContainer}>\n            <Example id={props.match.params.id}/>\n        </div>\n    )\n}\n\n\n\n\n\n\n\n","/home/jears0177/2021/deploy-workshop/client/src/components/Login/Login.js",[],"/home/jears0177/2021/deploy-workshop/client/src/components/Edit-Order/Edit-Order.js",["111","112","113","114","115","116","117","118","119"],"import React, {useEffect, useState} from 'react'\nimport axios from \"axios\";\nimport {setContainerIsEmpty, setProductContainer, setProductValue} from \"../../store/reducers/order\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport c from './Edit-Order.module.css'\nimport {Redirect} from \"react-router-dom\";\n\nconst initialState = {\n    client: '',\n    number: '',\n    dateEnd: '',\n    productName: '',\n    action: '',\n    price: '',\n    products: [],\n    sum: '',\n    currentSum: ''\n}\n\nexport const EditOrder = (props) => {\n    const [product, setProduct] = useState([])\n    const [productFilter, setProductFilter] = useState([])\n    const [receipt, setReceipt] = useState(initialState)\n    const [sum, setSum] = useState(0)\n    const [fetching, setFetching] = useState(false)\n\n    const dispatch = useDispatch()\n    const state = useSelector(state => state.order)\n\n\n    useEffect(() => {\n        axios.get(`https://workshop-application77.herokuapp.com/api/receipt/${props.match.params.id}`).then(res => setReceipt(prevState => {\n            return {\n                ...prevState,\n                client: res.data.client,\n                number: res.data.number,\n                dateEnd: res.data.dateEnd,\n                products: [...res.data.products],\n                sum: res.data.sum,\n                currentSum: res.data.currentSum\n            }\n\n        }))\n    }, [])\n\n    useEffect(() => {\n        axios.get('https://workshop-application77.herokuapp.com/api/products/').then(res => {\n            setProduct(res.data)\n            setSum(receipt.sum)\n        })\n    }, [receipt.sum])\n\n    useEffect(() => {\n        setProductFilter(product.map(el => el.name))\n    }, [product])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const obj = {\n            client: receipt.client,\n            number: receipt.number,\n            dateEnd: receipt.dateEnd,\n            productName: receipt.productName,\n            action: receipt.action,\n            products: [...receipt.products],\n            sum: sum,\n            currentSum: receipt.currentSum\n        }\n        axios.put(`https://workshop-application77.herokuapp.com/api/receipt/${props.match.params.id}`, {...obj})\n        setReceipt(prevState => {\n            return {\n                ...prevState,\n                client: '',\n                number: '',\n                dateEnd: '',\n                productName: '',\n                action: '',\n                price: '',\n                sum: '',\n                products: [],\n                currentSum: ''\n            }\n        })\n        setSum(0)\n        if (receipt.client && receipt.number && receipt.products) {\n            setFetching(true)\n        }\n    }\n\n    if (receipt.action) {\n        axios.get(`https://workshop-application77.herokuapp.com/api/products/${receipt.productName}/${receipt.action}`).then(res => setReceipt(prevState => {\n            return {...prevState, price: res.data[0].price}\n        }))\n    }\n\n    const formOnChange = (e) => {\n        setReceipt(prevState => {\n            return {...prevState, [e.target.name]: e.target.value}\n        })\n    }\n\n    const addSomeProduct = (e) => {\n        e.preventDefault()\n        const product = {\n            productName: receipt.productName,\n            action: receipt.action,\n            price: receipt.price,\n        }\n        setReceipt(prevState => {\n            return {...prevState, products: [...prevState.products, product]}\n        })\n        setSum(sum + receipt.price)\n        setReceipt(prevState => {\n            return {...prevState, productName: '', action: '', price: ''}\n        })\n    }\n\n    const clearCard = () => {\n        setReceipt(prevState => {\n            return {...prevState, products: []}\n        })\n        setSum(0)\n    }\n\n    if (fetching) {\n        return <Redirect to={'/'}/>\n    }\n\n    return (\n        <div>\n            <h2 className={c.title}>Редактирование заказа:</h2>\n            <form onSubmit={onSubmit}>\n                <div>\n                    <label>\n                        ФИО:\n                        <input\n                            className=\"form-control\"\n                            value={receipt.client}\n                            name={'client'}\n                            onChange={formOnChange}\n                            placeholder={'Введите ФИО'}\n                            type=\"text\"\n                        />\n                    </label>\n                </div>\n                <div>\n                    <label>\n                        Номер:\n                        <input\n                            className=\"form-control\"\n                            value={receipt.number}\n                            name={'number'}\n                            onChange={formOnChange}\n                            placeholder={'Введите номер'}\n                            type=\"number\"\n                        />\n                    </label>\n                </div>\n                <div>\n                    <label>\n                        Дата готового изделия:\n                        <input\n                            className=\"form-control\"\n                            value={receipt.dateEnd}\n                            name={'dateEnd'}\n                            onChange={formOnChange}\n                            type=\"date\"\n                        />\n                    </label>\n                </div>\n                <div className={c.productSelectContainer}>\n                    <div>\n                        <label>\n                            Изделие:\n                            <select className=\"form-select\" value={receipt.productName} name='productName'\n                                    onChange={formOnChange}>\n                                <option>Выберите одежду</option>\n                                {productFilter.filter((el, idx) => productFilter.indexOf(el) === idx).map(prod => {\n                                    return (\n                                        <option value={prod} key={prod}>{prod}</option>\n                                    )\n                                })}\n                            </select>\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Действие:\n                            <select className=\"form-select\" value={receipt.action} name='action'\n                                    onChange={formOnChange}>\n                                <option>Выберите действие</option>\n                                {product.filter(prod => prod.name === receipt.productName).map(prod => {\n                                    return (\n                                        <option value={prod.action} key={prod._id}>{prod.action}</option>\n                                    )\n                                })}\n                            </select>\n                        </label>\n                    </div>\n                    <div className={c.productButton}>\n                        <input onClick={addSomeProduct} className=\"btn btn-primary\" value={'add'} type=\"button\"/>\n                    </div>\n                    <div className={c.productButton}>\n                        <input onClick={clearCard} className=\"btn btn-primary\" value={'clear'} type=\"button\"/>\n                    </div>\n                </div>\n                {receipt.products.length != 0 && <div className={c.table}>\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Изделие</th>\n                            <th scope=\"col\">Перечень работ</th>\n                            <th scope=\"col\">Стоимость</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {receipt.products.map((el, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{index + 1}</th>\n                                    <td>{el.productName}</td>\n                                    <td>{el.action}</td>\n                                    <td>{el.price} руб.</td>\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </table>\n                </div>}\n                {receipt.products.length != 0 && <div>Итого: {sum} руб.</div>}\n                {receipt.products.length != 0 &&\n                <div className={c.currentSum}>\n                    <label>\n                        Внесенная сумма:\n                        <input\n                            className=\"form-control\"\n                            value={receipt.currentSum}\n                            name={'currentSum'}\n                            onChange={formOnChange}\n                            placeholder={'Введите внесенную сумму'}\n                            type=\"number\"\n                        />\n                    </label>\n                </div>}\n                <div className={c.submitBtn}>\n                    <input className=\"btn btn-primary\" type=\"submit\" value={'Добавить заказ'}/>\n                </div>\n            </form>\n        </div>\n    )\n}","/home/jears0177/2021/deploy-workshop/client/src/store/reducers/index.js",[],"/home/jears0177/2021/deploy-workshop/client/src/store/reducers/login.js",[],"/home/jears0177/2021/deploy-workshop/client/src/store/reducers/order.js",[],"/home/jears0177/2021/deploy-workshop/client/src/components/Receipt/Receipt.js",["120"],"import React, {useEffect, useState} from 'react'\nimport c from './Receipt.module.css'\nimport axios from 'axios'\n\n\nexport const Receipt = (props) => {\n    const initialState = {\n        client: '',\n        dateEnd: '',\n        dateStart: '',\n        number: '',\n        products: [],\n        currentSum: ''\n    }\n    const [receipt, setReceipt] = useState(initialState)\n    useEffect(() => {\n        axios.get(`https://workshop-application77.herokuapp.com/api/receipt/${props.id}`).then(res => setReceipt(prevState => {\n            return {\n                ...prevState,\n                client: res.data.client,\n                number: res.data.number,\n                dateStart: res.data.dateStart,\n                dateEnd: res.data.dateEnd,\n                products: [...res.data.products],\n                sum: res.data.sum,\n                currentSum: res.data.currentSum\n            }\n        }))\n    }, [])\n    return (\n        <div className={c.receipt}>\n            <div className={c.receiptDates}>\n                <div>\n                    <div>Режим работы:</div>\n                    <div>ПН-ЧТ 10-19</div>\n                    <div>Перерыв с 14-15</div>\n                    <div>ПТ 10-16</div>\n                    <div>Без перерыва</div>\n                    <div>+375298611911</div>\n                </div>\n                <div>\n                    <div>Дата приёма заказа: {receipt.dateStart.slice(0, 10)}</div>\n                    <div>Дата выдачи заказа: {receipt.dateEnd}</div>\n                </div>\n            </div>\n            <div className={c.receiptTitle}>\n                <h3>Квитанция</h3>\n            </div>\n            <div className={c.receiptClient}>\n                <div>Заказачик: {receipt.client}</div>\n                <div>Телефон: +375{receipt.number}</div>\n            </div>\n            <div className={c.receiptTableWrapper}>\n                <div className={c.receiptTable}>\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Изделие</th>\n                            <th scope=\"col\">Перечень работ</th>\n                            <th scope=\"col\">Стоимость</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {receipt.products.map((el, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{index + 1}</th>\n                                    <td>{el.productName}</td>\n                                    <td>{el.action}</td>\n                                    <td>{el.price} руб.</td>\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </table>\n                </div>\n                <div className={c.receiptSum}>\n                    <div>Внесено: {receipt.currentSum > 0 ? <span className={c.currentSum}> {receipt.currentSum} руб.</span>: <span>______________</span>}</div>\n                    <div> Итого: {receipt.sum} руб.</div>\n                </div>\n            </div>\n        </div>\n    )\n}","/home/jears0177/2021/deploy-workshop/client/src/components/Print/Print.js",["121"],"import React from \"react\";\nimport ReactToPrint from \"react-to-print\";\nimport c from \"../ReceiptComponent/ReceiptComponent.module.css\";\nimport {Chek} from \"../Chek/Chek\";\n\n class ReceiptComponenT extends React.Component{\n    constructor(props) {\n        super(props);\n    }\n    render(){\n        return (\n            <div className={c.receiptContainer}>\n                <Chek id={this.props.id}/>\n            </div>\n        )\n    }\n\n}\n\nexport class Example extends React.Component {\n    render() {\n        return (\n            <div>\n                <ReactToPrint\n                    trigger={() => <button className={'btn btn-primary'}>Print this out!</button>}\n                    content={() => this.componentRef}\n                />\n                <ReceiptComponenT id={this.props.id} ref={(el) => (this.componentRef = el)} />\n            </div>\n        );\n    }\n}\n\n","/home/jears0177/2021/deploy-workshop/client/src/utils/Checked.js",[],"/home/jears0177/2021/deploy-workshop/client/src/components/Chek/Chek.js",[],"/home/jears0177/2021/deploy-workshop/client/src/components/Order-Table/Order-Table.js",["122"],"import React from 'react'\nimport c from \"../Orders/Orders.module.css\";\nimport {Link} from \"react-router-dom\";\n\n\nexport const OrderTable = (props) => {\n\n    const {order, deleteHandler, query} = props\n    return (\n        <div className={c.tableWrapper}>\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Клиент</th>\n                    <th scope=\"col\">Номер</th>\n                    <th scope=\"col\">Дата приёма</th>\n                    <th scope=\"col\">Дата выдачи</th>\n                    <th scope=\"col\">Изделие</th>\n                    <th scope=\"col\">Перечень работ</th>\n                    <th scope=\"col\">Стоимость</th>\n                    <th scope=\"col\">Внес. сумма</th>\n                    <th scope=\"col\">Actions</th>\n                </tr>\n                </thead>\n                <tbody>\n                {order.filter(order => {\n                    if (!query) {\n                        return order\n                    } else if (order.client.toLowerCase().includes(query.toLowerCase())) {\n                        return order\n                    }\n                }).map((receipt, idx) => {\n                    return (\n                        <tr key={idx}>\n                            <th scope=\"row\">{idx + 1}</th>\n                            <td>{receipt.client}</td>\n                            <td>{receipt.number}</td>\n                            <td>{receipt.dateStart.slice(0, 10)}</td>\n                            <td>{receipt.dateEnd}</td>\n                            <td>{receipt.products.map((res, idx) => <div key={idx}>{res.productName}</div>)}</td>\n                            <td>{receipt.products.map((res, idx) => <div key={idx}>{res.action}</div>)}</td>\n                            <td>{receipt.sum} руб.</td>\n                            <td>{receipt.currentSum} руб.</td>\n                            <td>\n                                <div className={c.actionSection}>\n                                    <Link to={`/edit-order/${receipt._id}`}>\n                                        <div className={'btn btn-primary'}>edit</div>\n                                    </Link>\n                                    <Link to={`/receipt/${receipt._id}`}>\n                                        <div className={'btn btn-primary'}>print</div>\n                                    </Link>\n                                    <input className={'btn btn-primary'}\n                                           type=\"button\"\n                                           value={'delete'}\n                                           onClick={() => deleteHandler(receipt._id)}\n                                    />\n                                </div>\n                            </td>\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </table>\n        </div>\n    )\n}",{"ruleId":"123","severity":1,"message":"124","line":11,"column":9,"nodeType":"125","messageId":"126","endLine":11,"endColumn":16},{"ruleId":"123","severity":1,"message":"127","line":31,"column":11,"nodeType":"125","messageId":"126","endLine":31,"endColumn":24},{"ruleId":"123","severity":1,"message":"128","line":3,"column":51,"nodeType":"125","messageId":"126","endLine":3,"endColumn":66},{"ruleId":"129","severity":1,"message":"130","line":177,"column":45,"nodeType":"131","messageId":"132","endLine":177,"endColumn":47},{"ruleId":"129","severity":1,"message":"130","line":182,"column":41,"nodeType":"131","messageId":"132","endLine":182,"endColumn":43},{"ruleId":"129","severity":1,"message":"130","line":206,"column":41,"nodeType":"131","messageId":"132","endLine":206,"endColumn":43},{"ruleId":"129","severity":1,"message":"130","line":207,"column":41,"nodeType":"131","messageId":"132","endLine":207,"endColumn":43},{"ruleId":"123","severity":1,"message":"133","line":15,"column":12,"nodeType":"125","messageId":"126","endLine":15,"endColumn":19},{"ruleId":"123","severity":1,"message":"134","line":15,"column":21,"nodeType":"125","messageId":"126","endLine":15,"endColumn":31},{"ruleId":"135","severity":1,"message":"136","line":22,"column":8,"nodeType":"137","endLine":22,"endColumn":10,"suggestions":"138"},{"ruleId":"123","severity":1,"message":"139","line":1,"column":16,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"140","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":33},{"ruleId":"123","severity":1,"message":"141","line":1,"column":35,"nodeType":"125","messageId":"126","endLine":1,"endColumn":43},{"ruleId":"123","severity":1,"message":"142","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":13},{"ruleId":"123","severity":1,"message":"143","line":5,"column":9,"nodeType":"125","messageId":"126","endLine":5,"endColumn":16},{"ruleId":"123","severity":1,"message":"144","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":20},{"ruleId":"123","severity":1,"message":"145","line":3,"column":9,"nodeType":"125","messageId":"126","endLine":3,"endColumn":28},{"ruleId":"123","severity":1,"message":"146","line":3,"column":30,"nodeType":"125","messageId":"126","endLine":3,"endColumn":49},{"ruleId":"123","severity":1,"message":"128","line":3,"column":51,"nodeType":"125","messageId":"126","endLine":3,"endColumn":66},{"ruleId":"123","severity":1,"message":"147","line":27,"column":11,"nodeType":"125","messageId":"126","endLine":27,"endColumn":19},{"ruleId":"123","severity":1,"message":"148","line":28,"column":11,"nodeType":"125","messageId":"126","endLine":28,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":44,"column":8,"nodeType":"137","endLine":44,"endColumn":10,"suggestions":"149"},{"ruleId":"129","severity":1,"message":"130","line":207,"column":42,"nodeType":"131","messageId":"132","endLine":207,"endColumn":44},{"ruleId":"129","severity":1,"message":"130","line":231,"column":42,"nodeType":"131","messageId":"132","endLine":231,"endColumn":44},{"ruleId":"129","severity":1,"message":"130","line":232,"column":42,"nodeType":"131","messageId":"132","endLine":232,"endColumn":44},{"ruleId":"135","severity":1,"message":"150","line":29,"column":8,"nodeType":"137","endLine":29,"endColumn":10,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":7,"column":5,"nodeType":"154","messageId":"155","endLine":9,"endColumn":6},{"ruleId":"156","severity":1,"message":"157","line":27,"column":37,"nodeType":"158","messageId":"159","endLine":27,"endColumn":39},"no-unused-vars","'Example' is defined but never used.","Identifier","unusedVar","'submitHandler' is assigned a value but never used.","'setProductValue' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'product' is assigned a value but never used.","'setProduct' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["160"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'Receipt' is defined but never used.","'ReactToPrint' is defined but never used.","'setContainerIsEmpty' is defined but never used.","'setProductContainer' is defined but never used.","'dispatch' is assigned a value but never used.","'state' is assigned a value but never used.",["161"],"React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["162"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"163","fix":"164"},{"desc":"163","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [props.match.params.id]",{"range":"168","text":"169"},{"range":"170","text":"169"},"Update the dependencies array to be: [props.id]",{"range":"171","text":"172"},[742,744],"[props.match.params.id]",[1380,1382],[908,910],"[props.id]"]